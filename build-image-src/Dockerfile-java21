ARG IMAGE_ARCH
# TODO (hawflau): remove preview tag
FROM public.ecr.aws/lambda/java:21-preview-$IMAGE_ARCH

RUN dnf remove -y microdnf-dnf && \
  microdnf install -y dnf

RUN dnf groupinstall -y development && \
  dnf install -y \
  tar \
  gzip \
  unzip \
  python3 \
  jq \
  grep \
  make \
  rsync \
  binutils \
  gcc-c++ \
  procps \
  libmpc-devel \
  gmp-devel \
  zlib-devel \
  python3-devel \
  && dnf clean all

# Install AWS CLI
ARG AWS_CLI_ARCH
RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-$AWS_CLI_ARCH.zip" -o "awscliv2.zip" && unzip awscliv2.zip && ./aws/install && rm awscliv2.zip && rm -rf ./aws

# Install SAM CLI in a dedicated Python virtualenv
ARG SAM_CLI_VERSION
RUN curl -L "https://github.com/awslabs/aws-sam-cli/archive/v$SAM_CLI_VERSION.zip" -o "samcli.zip" && \
  unzip samcli.zip && python3 -m venv /usr/local/opt/sam-cli && \
  /usr/local/opt/sam-cli/bin/pip3 --no-cache-dir install -r ./aws-sam-cli-$SAM_CLI_VERSION/requirements/base.txt && \
  /usr/local/opt/sam-cli/bin/pip3 --no-cache-dir install ./aws-sam-cli-$SAM_CLI_VERSION && \
  rm samcli.zip && rm -rf aws-sam-cli-$SAM_CLI_VERSION

ENV PATH=$PATH:/usr/local/opt/sam-cli/bin

ENV LANG=en_US.UTF-8

# Wheel is required by SAM CLI to build libraries like cryptography. It needs to be installed in the system
# Python for it to be picked up during `sam build`
RUN pip3 install wheel

# Setup Java Home

ENV JAVA_HOME="/var/lang"

# Install Java build tools
RUN mkdir /usr/local/gradle && curl -L -o gradle.zip https://downloads.gradle.org/distributions/gradle-8.4-bin.zip && \
  unzip -d /usr/local/gradle gradle.zip && rm gradle.zip && mkdir /usr/local/maven && \
  curl -L https://downloads.apache.org/maven/maven-3/3.9.5/binaries/apache-maven-3.9.5-bin.tar.gz | \
  tar -zx -C /usr/local/maven

ENV PATH="/usr/local/gradle/gradle-8.4/bin:/usr/local/maven/apache-maven-3.9.5/bin:${PATH}"

COPY ATTRIBUTION.txt /

# Set following GRADLE_OPTS and MAVEN_OPTS to fix issues with arm64 image
ENV GRADLE_OPTS="-Djdk.lang.Process.launchMechanism=vfork"
ENV MAVEN_OPTS="-Djdk.lang.Process.launchMechanism=vfork"

# Compatible with initial base image
ENTRYPOINT []
CMD ["/bin/bash"]
